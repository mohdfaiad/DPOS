{ RRRRRR                  ReportBuilder Class Library                  BBBBB
  RR   RR                                                              BB   BB
  RRRRRR                 Digital Metaphors Corporation                 BB BB
  RR  RR                                                               BB   BB
  RR   RR                   Copyright (c) 1996-2002                    BBBBB   }

unit ppOutlineSettings;

interface

{$I ppIfDef.pas}

uses
  Classes,
  ppComm;

type

  {@TppOutlineSettings

    Use TppOutlineSettings to control the behavior of report outline generation.
    When enabled, an outline tree structure is dynamically generated by the
    report engine and rendered by the report previewer.

    From the report designer, select the Report|Outline Settings... menu
    option to access a dialog that enables simple visual configuration of
    outline settings for all relevant objects in the report.

    TppOutlineSettings is an embedded object property of outline participants.
    TppReport, TppSubReport, and TppGroup are outline participants that are
    capable of generating outline nodes.

    TppOutlineSettings defines a single boolean property, CreateNode, that can
    be used to control whether a Report, SubReport section, or Group
    generates an outline node each time it prints on a page of the report.

    TppOutlineReportSettings is a descendant of TppOutlineSettings the inroduces
    additional properties used by TppReport.}

  {@TppOutlineSettings.CreateNode

    Controls whether an outline participant generates an outline node each time
    it prints on a page of the report. Outline participants include TppReport,
    TppSubreport (pbSection only), and TppGroup}


  TppOutlineSettings = class(TPersistent)
    private
      FCreateNode: Boolean;
      FParticipant: TppCommunicator;

      procedure SetCreateNode(aValue: Boolean);

    protected
      procedure SettingsChanged; 

    public
      constructor Create(aParticipant: TppCommunicator); virtual;

      procedure Assign(Source: TPersistent); override;

    published
      property CreateNode: Boolean read FCreateNode write SetCreateNode;

    end; { class, TppOutlineSettings }


implementation

uses
  ppOutlineParticipant;

{------------------------------------------------------------------------------}
{ TppOutlineSettings.Create }

constructor TppOutlineSettings.Create(aParticipant: TppCommunicator);
begin

  inherited Create;

  FParticipant := aParticipant;

  FCreateNode := True;

end; { constructor, Create }

{------------------------------------------------------------------------------}
{ TppOutlineSettings.SetCreateNode }

procedure TppOutlineSettings.SetCreateNode(aValue: Boolean);
begin

  FCreateNode := aValue;

  SettingsChanged;

end; { procedure, SetCreateNode }

{------------------------------------------------------------------------------}
{ TppOutlineSettings.SettingsChanged }

procedure TppOutlineSettings.SettingsChanged;
var
  IIParticipant: IppOutlineParticipant;
begin

  if not(csReading in FParticipant.ComponentState) then
    if not(csLoading in FParticipant.ComponentState) then
      begin

        FParticipant.GetInterface(IppOutlineParticipant, IIParticipant);

        IIParticipant.iOutlineSettingsChanged;

      end;

end; { procedure, SettingsChanged }

{------------------------------------------------------------------------------}
{ TppOutlineSettings.Assign }

procedure TppOutlineSettings.Assign(Source: TPersistent);
begin

  if (Source is TppOutlineSettings) then
    begin

      FCreateNode := TppOutlineSettings(Source).FCreateNode;

      SettingsChanged;
      
    end

  else
    inherited Assign(Source);

end; { procedure, Assign }

{------------------------------------------------------------------------------}

initialization

  RegisterClass(TppOutlineSettings);

finalization

  UnRegisterClass(TppOutlineSettings);

end.

